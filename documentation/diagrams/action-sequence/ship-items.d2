Ship Items: {
    
  label: "Ship Items"

  "" : {

    shape: sequence_diagram

    Customer.t1: actor
    ShippingAddress.t1: actor
    PaymentInfo
    Shipment
    Database.t1: actor

    Customer.t1 -> ShippingAddress.t1: enterDeliveryDetails(address)
    ShippingAddress.t1 -> Database.t1: validateAddress(address) 
    ShippingAddress.t1 <- Database.t1: addressValidated {
      style.stroke-dash: 5
    }
    Customer.t1 <- ShippingAddress.t1: confirmAddress() {
      style.stroke-dash: 5
    }

    alt label: "Address Validation" {
      style.stroke-width: 5
      
      if label: "Address Invalid" {
        style.fill: firebrick
        ShippingAddress.t1 -> Customer.t1: notifyError("Invalid or incomplete address") {
          style.stroke-dash: 5
        }
      }
      else label: "Address Valid" {
        style.fill: green
        Customer.t1 -> PaymentInfo.t2: choosePaymentMethod(method)
      }
    }

    PaymentInfo.t2 -> Database.t2: processPayment(customerId, method) 

    alt1 label: "Payment Transaction" {
      style.stroke-width: 5

      if label: "Payment Failure" {
        style.fill: firebrick
        PaymentInfo.t2 -> Customer.t2: notifyPaymentFailure() {
          style.stroke-dash: 5
        }
        Customer.t2 -> PaymentInfo.t2: retryPayment()
      }
      else label: "Payment Success" {
        style.fill: green
        PaymentInfo.t2 <- Database.t2: confirmPayment {
          style.stroke-dash: 5
        }
        Customer.t2 <- PaymentInfo.t2: paymentConfirmed() {
          style.stroke-dash: 5
        }
      }
    }
        Shipment.t3 -> Database.t3: generateTrackingNumber() {
          style.stroke-dash: 5
        }
        Shipment.t3 <- Database.t3: trackingNumberGenerated {
          style.stroke-dash: 5
        }
        Customer.t3 <- Shipment.t3: displayTrackingNumber() {
          style.stroke-dash:Â 5
    }
  }
}